name: "Build image"
description: "Build the specified image if it's affected"
inputs:
  image_name:
    description: 'The image key in images.yaml'
    required: true
  gh_pat_token:
    description: "GitHub personal access token"
    required: true
  cache_path:
    description: "The path to cache inside the container"
    required: true
outputs:
  affected:
    description: "Whether the image is affected"
    value: ${{ steps.check_affected.outputs.affected }}    
runs:
  using: "composite"
  steps:
    - name: Setup basic vars
      shell: bash
      run: |
        echo "IMAGE_NAME=${{ inputs.image_name }}" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Check if affected
      id: check_affected
      shell: bash
      run: |
        AFFECTED=$(devops affected image $IMAGE_NAME --from-live-version)
        echo "affected=$AFFECTED" >> $GITHUB_OUTPUT
        if [[ "$AFFECTED" == "true" ]]; then
          echo "${{ env.IMAGE_NAME }} is affected. Proceeding with build."
        else
          echo "${{ env.IMAGE_NAME }} is not affected. Skipping."
        fi

    - name: Prepare build
      shell: bash
      if: steps.check_affected.outputs.affected == 'true'
      run: |
        echo "CACHE_PREFIX=v1-${{ runner.os }}-${{ env.IMAGE_NAME }}-${{ github.ref_name }}" >> $GITHUB_ENV
        echo "ECR_URL=$(devops registry repo-url ${{ env.IMAGE_NAME }} ${{ github.sha }})" >> $GITHUB_ENV
        folder=$(devops prep-build ${{ env.IMAGE_NAME }})
        mv $folder /home/runner/build
        echo MONOREPO_ENV=${{ env.MONOREPO_ENV }}

    - name: Setup cache
      if: steps.check_affected.outputs.affected == 'true'
      id: setup-cache
      uses: actions/cache@v4
      with:
        path: cache-path
        key: ${{ env.CACHE_PREFIX }}

    - name: Inject cache into docker
      if: steps.check_affected.outputs.affected == 'true'
      uses: reproducible-containers/buildkit-cache-dance@v3.1.0
      with:
        cache-map: |
          {
            "cache-path": "${{ inputs.cache_path }}"
          }
        skip-extraction: ${{ steps.setup-cache.outputs.cache-hit }}          

    - name: Build and push Docker image
      if: steps.check_affected.outputs.affected == 'true'
      uses: docker/build-push-action@v6
      with:
        context: /home/runner/build
        push: true
        tags: ${{ env.ECR_URL }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        secrets: |
          GH_PAT_TOKEN=${{ inputs.gh_pat_token }}
        build-args: |
          MONOREPO_ENV=${{ env.MONOREPO_ENV }}

    - name: Prune registry
      if: steps.check_affected.outputs.affected == 'true'
      shell: bash
      run: |
        devops registry prune ${{ env.IMAGE_NAME }}
